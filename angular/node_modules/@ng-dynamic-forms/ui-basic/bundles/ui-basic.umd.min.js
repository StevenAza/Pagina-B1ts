/*!
@ng-dynamic-forms/ui-basic 7.0.1 2018-11-03 16:32 UTC
Copyright (c) 2016-2018, Udo Sch√∂fer http://www.udos86.de

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
*/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@ng-dynamic-forms/core"),require("@angular/common"),require("angular2-text-mask")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/forms","@ng-dynamic-forms/core","@angular/common","angular2-text-mask"],t):t((e.ngDF=e.ngDF||{},e.ngDF.basicUI={}),e.ng.core,e.ng.forms,e.ngDF.core,e.ng.common,e["angular2-text-mask"])}(this,function(e,a,t,n,o,r){"use strict";var i,l,c,u,p,s,m,d,y=this&&this.__extends||(i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),g=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return y(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-basic-checkbox",template:'<label [formGroup]="group" [ngClass]="[getClass(\'element\', \'control\'), getClass(\'grid\', \'control\')]">\n\n    <input type="checkbox"\n           [checked]="model.checked"\n           [formControlName]="model.id"\n           [id]="elementId"\n           [indeterminate]="model.indeterminate"\n           [name]="model.name"\n           [required]="model.required"\n           [tabindex]="model.tabIndex"\n           [value]="model.value"\n           (blur)="onBlur($event)"\n           (change)="onChange($event)"\n           (focus)="onFocus($event)"/><span [ngClass]="getClass(\'element\', \'label\')"\n                                            [innerHTML]="model.label"></span></label>\n',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormControlComponent),f=this&&this.__extends||(l=function(e,t){return(l=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}l(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),h=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.customEvent=new a.EventEmitter,n.focus=new a.EventEmitter,n}return f(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-basic-form-array",template:'<ng-container [formGroup]="group">\n\n    <div [formArrayName]="model.id" [id]="elementId" [ngClass]="getClass(\'element\', \'control\')">\n\n        <div *ngFor="let groupModel of model.groups; let idx = index" role="group"\n             [formGroupName]="idx" [ngClass]="[getClass(\'element\', \'group\'), getClass(\'grid\', \'group\')]">\n\n            <ng-container *ngTemplateOutlet="startTemplate?.templateRef; context: groupModel"></ng-container>\n\n            <dynamic-basic-form-control *ngFor="let _model of groupModel.group"\n                                        [context]="groupModel"\n                                        [group]="control.at(idx)"\n                                        [hidden]="_model.hidden"\n                                        [layout]="layout"\n                                        [model]="_model"\n                                        [templates]="templates"\n                                        [ngClass]="[getClass(\'element\', \'host\', _model), getClass(\'grid\', \'host\', _model),\n                                                    getClass(\'element\',\'children\'), getClass(\'grid\',\'children\')]"\n                                        (blur)="onBlur($event)"\n                                        (change)="onChange($event)"\n                                        (focus)="onFocus($event)"\n                                        (bsEvent)="onCustomEvent($event, null, true)"></dynamic-basic-form-control>\n\n            <ng-container *ngTemplateOutlet="endTemplate?.templateRef; context: groupModel"></ng-container>\n\n        </div>\n\n    </div>\n\n</ng-container>\n'}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],templates:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],customEvent:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormArrayComponent),v=this&&this.__extends||(c=function(e,t){return(c=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}c(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),C=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.customEvent=new a.EventEmitter,n.focus=new a.EventEmitter,n}return v(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-basic-form-group",template:'<ng-container [formGroup]="group">\n\n    <fieldset [formGroupName]="model.id"\n              [id]="elementId"\n              [name]="model.name"\n              [ngClass]="getClass(\'element\', \'control\')">\n\n        <legend *ngIf="model.legend" [innerHTML]="model.legend"></legend>\n\n        <dynamic-basic-form-control *ngFor="let _model of model.group"\n                                    [group]="control"\n                                    [hidden]="_model.hidden"\n                                    [layout]="layout"\n                                    [model]="_model"\n                                    [templates]="templates"\n                                    [ngClass]="[getClass(\'element\', \'host\', _model), getClass(\'grid\', \'host\', _model),\n                                                getClass(\'element\',\'children\'), getClass(\'grid\',\'children\')]"\n                                    (blur)="onBlur($event)"\n                                    (change)="onChange($event)"\n                                    (focus)="onFocus($event)"\n                                    (bsEvent)="onCustomEvent($event, null, true)"></dynamic-basic-form-control>\n    </fieldset>\n\n</ng-container>\n'}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],templates:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],customEvent:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormControlComponent),_=this&&this.__extends||(u=function(e,t){return(u=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}u(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),O=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return _(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-basic-input",template:'<div [formGroup]="group">\n\n    <input [attr.accept]="model.accept"\n           [attr.max]="model.max"\n           [attr.min]="model.min"\n           [attr.multiple]="model.multiple"\n           [attr.step]="model.step"\n           [autocomplete]="model.autoComplete"\n           [autofocus]="model.autoFocus"\n           [dynamicList]="model.listId"\n           [formControlName]="model.id"\n           [id]="elementId"\n           [maxlength]="model.maxLength"\n           [minlength]="model.minLength"\n           [name]="model.name"\n           [ngClass]="[getClass(\'element\', \'control\'), getClass(\'grid\', \'control\')]"\n           [pattern]="model.pattern"\n           [placeholder]="model.placeholder"\n           [readonly]="model.readOnly"\n           [required]="model.required"\n           [spellcheck]="model.spellCheck"\n           [tabindex]="model.tabIndex"\n           [textMask]="{mask: (model.mask || false), showMask: model.mask && !(model.placeholder)}"\n           [type]="model.inputType"\n           (blur)="onBlur($event)"\n           (change)="onChange($event)"\n           (focus)="onFocus($event)"/>\n\n    <datalist *ngIf="model.hasList" [id]="model.listId">\n\n        <option *ngFor="let option of model.list$ | async" [value]="option">\n\n    </datalist>\n\n</div>\n',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormControlComponent),b=this&&this.__extends||(p=function(e,t){return(p=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}p(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),E=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return b(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-basic-radio-group",template:'<fieldset role="radiogroup"\n          [formGroup]="group"\n          [id]="elementId"\n          [name]="model.name"\n          [ngClass]="[getClass(\'element\', \'control\'), getClass(\'grid\', \'control\')]"\n          [tabindex]="model.tabIndex"\n          (change)="onChange($event)">\n\n    <legend *ngIf="model.legend" [innerHTML]="model.legend"></legend>\n\n    <label *ngFor="let option of model.options$ | async" [ngClass]="getClass(\'element\', \'option\')">\n\n        <input type="radio"\n               [formControlName]="model.id"\n               [name]="model.name"\n               [value]="option.value"\n               (blur)="onBlur($event)"\n               (focus)="onFocus($event)"/><span [innerHTML]="option.label"></span></label>\n</fieldset>\n',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormControlComponent),D=this&&this.__extends||(s=function(e,t){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}s(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),F=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return D(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-basic-select",template:'<ng-container [formGroup]="group">\n\n    <select [compareWith]="model.compareWithFn"\n            [formControlName]="model.id"\n            [id]="elementId"\n            [name]="model.name"\n            [ngClass]="[getClass(\'element\', \'control\'), getClass(\'grid\', \'control\')]"\n            [required]="model.required"\n            [tabindex]="model.tabIndex"\n            (blur)="onBlur($event)"\n            (change)="onChange($event)"\n            (focus)="onFocus($event)">\n\n        <option *ngFor="let option of model.options$ | async"\n                [disabled]="option.disabled"\n                [ngValue]="option.value">{{ option.label }}\n        </option>\n\n    </select>\n\n</ng-container>\n',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormControlComponent),I=this&&this.__extends||(m=function(e,t){return(m=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}m(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),w=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return I(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-basic-textarea",template:'<ng-container [formGroup]="group">\n\n    <textarea [cols]="model.cols"\n              [formControlName]="model.id"\n              [id]="elementId"\n              [maxlength]="model.maxLength"\n              [minlength]="model.minLength"\n              [name]="model.name"\n              [ngClass]="[getClass(\'element\', \'control\'), getClass(\'grid\', \'control\')]"\n              [placeholder]="model.placeholder"\n              [readonly]="model.readOnly"\n              [required]="model.required"\n              [rows]="model.rows"\n              [spellcheck]="model.spellCheck"\n              [tabindex]="model.tabIndex"\n              [wrap]="model.wrap"\n              (blur)="onBlur($event)"\n              (change)="onChange($event)"\n              (focus)="onFocus($event)"></textarea>\n\n</ng-container>\n',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormControlComponent),x=this&&this.__extends||(d=function(e,t){return(d=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}d(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),P=function(r){function e(e,t,n){var o=r.call(this,e,t,n)||this;return o.componentFactoryResolver=e,o.layoutService=t,o.validationService=n,o.context=null,o.blur=new a.EventEmitter,o.change=new a.EventEmitter,o.focus=new a.EventEmitter,o}return x(e,r),Object.defineProperty(e.prototype,"componentType",{get:function(){return this.layoutService.getCustomComponentType(this.model)||M(this.model)},enumerable:!0,configurable:!0}),e.decorators=[{type:a.Component,args:[{selector:"dynamic-basic-form-control",template:"<div [formGroup]=\"group\" [ngClass]=\"[getClass('element', 'container'), getClass('grid', 'container')]\">\n\n    <label *ngIf=\"!isCheckbox && hasLabel\"\n           [for]=\"elementId\"\n           [innerHTML]=\"model.label\"\n           [ngClass]=\"[getClass('element', 'label'), getClass('grid', 'label')]\"></label>\n\n    <ng-container *ngTemplateOutlet=\"startTemplate?.templateRef; context: model\"></ng-container>\n\n    <ng-container #componentViewContainer></ng-container>\n\n    <div *ngIf=\"hasHint\" [ngClass]=\"[getClass('element', 'hint'), getClass('grid', 'hint')]\">\n        <span [innerHTML]=\"model.hint\"></span>\n    </div>\n\n    <ul *ngIf=\"showErrorMessages\" [ngClass]=\"[getClass('element', 'errors'), getClass('grid', 'errors')]\">\n        <li *ngFor=\"let message of errorMessages\">{{ message }}</li>\n    </ul>\n\n    <ng-container *ngTemplateOutlet=\"endTemplate?.templateRef; context: model\"></ng-container>\n\n    <ng-content></ng-content>\n\n</div>\n"}]}],e.ctorParameters=function(){return[{type:a.ComponentFactoryResolver},{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={contentTemplateList:[{type:a.ContentChildren,args:[n.DynamicTemplateDirective]}],inputTemplateList:[{type:a.Input,args:["templates"]}],context:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}],componentViewContainerRef:[{type:a.ViewChild,args:["componentViewContainer",{read:a.ViewContainerRef}]}]},e}(n.DynamicFormControlContainerComponent);function M(e){switch(e.type){case n.DYNAMIC_FORM_CONTROL_TYPE_ARRAY:return h;case n.DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:return g;case n.DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:case n.DYNAMIC_FORM_CONTROL_TYPE_GROUP:return C;case n.DYNAMIC_FORM_CONTROL_TYPE_INPUT:return O;case n.DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:return E;case n.DYNAMIC_FORM_CONTROL_TYPE_SELECT:return F;case n.DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:return w;default:return null}}var S,T=this&&this.__extends||(S=function(e,t){return(S=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}S(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),L=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.formService=e,n.layoutService=t,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return T(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-basic-form",template:'<dynamic-basic-form-control *ngFor="let model of formModel; trackBy: trackByFn"\n                            [group]="formGroup"\n                            [hidden]="model.hidden"\n                            [layout]="formLayout"\n                            [model]="model"\n                            [ngClass]="[getClass(model,\'element\',\'host\'), getClass(model,\'grid\',\'host\')]"\n                            [templates]="templates"\n                            (blur)="onEvent($event, \'blur\')"\n                            (change)="onEvent($event, \'change\')"\n                            (focus)="onEvent($event, \'focus\')"></dynamic-basic-form-control>'}]}],e.ctorParameters=function(){return[{type:n.DynamicFormService},{type:n.DynamicFormLayoutService}]},e.propDecorators={formGroup:[{type:a.Input,args:["group"]}],formModel:[{type:a.Input,args:["model"]}],formLayout:[{type:a.Input,args:["layout"]}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}],templates:[{type:a.ContentChildren,args:[n.DynamicTemplateDirective]}],components:[{type:a.ViewChildren,args:[P]}]},e}(n.DynamicFormComponent),R=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{imports:[t.FormsModule,o.CommonModule,t.ReactiveFormsModule,r.TextMaskModule,n.DynamicFormsCoreModule],declarations:[g,h,L,P,C,O,E,F,w],entryComponents:[g,h,C,O,E,F,w],exports:[n.DynamicFormsCoreModule,g,h,L,P,C,O,E,F,w]}]}],e}();e.DynamicBasicCheckboxComponent=g,e.DynamicBasicFormArrayComponent=h,e.DynamicBasicFormGroupComponent=C,e.DynamicBasicInputComponent=O,e.DynamicBasicRadioGroupComponent=E,e.DynamicBasicSelectComponent=F,e.DynamicBasicTextAreaComponent=w,e.DynamicBasicFormComponent=L,e.basicUIFormControlMapFn=M,e.DynamicBasicFormControlContainerComponent=P,e.DynamicFormsBasicUIModule=R,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ui-basic.umd.min.js.map
